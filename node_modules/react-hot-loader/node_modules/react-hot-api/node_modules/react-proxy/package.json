{
  "name": "react-proxy",
  "version": "0.6.5",
  "description": "Proxies React components without unmounting or losing their state.",
  "main": "modules/index.js",
  "scripts": {
    "build": "rimraf modules dist && webpack && babel src --out-dir modules",
    "test": "mocha --compilers js:babel/register --recursive ./test",
    "test:watch": "npm run test -- --watch",
    "prepublish": "npm run build"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/gaearon/react-proxy.git"
  },
  "author": {
    "name": "Dan Abramov",
    "email": "dan.abramov@me.com",
    "url": "http://github.com/gaearon"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/gaearon/react-proxy/issues"
  },
  "homepage": "https://github.com/gaearon/react-proxy",
  "devDependencies": {
    "babel": "^5.1.13",
    "babel-core": "^5.1.13",
    "babel-loader": "^5.0.0",
    "expect": "^1.9.0",
    "mocha": "^2.2.4",
    "react": "^0.13.2",
    "rimraf": "^2.4.2",
    "webpack": "1.4.8"
  },
  "dependencies": {
    "lodash": "^3.7.0"
  },
  "readme": "# React Proxy [![build status](https://img.shields.io/travis/gaearon/react-proxy/master.svg?style=flat-square)](https://travis-ci.org/gaearon/react-proxy) [![npm version](https://img.shields.io/npm/v/react-proxy.svg?style=flat-square)](https://www.npmjs.com/package/react-proxy) \n\n**Work in progress.**\n\nGeneric React component proxy.  \nA future engine for React Hot Loader. \n\n## Requirements\n\n* React 0.13+\n\n## Usage\n\nIntended to be used from hot reloading tools like React Hot Loader.  \nIf you’re an application developer, it’s unlikely you’ll want to use it directly.\n\n```js\nimport React, { Component } from 'react';\n\nclass ComponentVersion1 extends Component {\n  render() {\n    return <div>Before hot update.</div>;\n  }\n}\n\nclass ComponentVersion2 extends Component {\n  render() {\n    return <div>After hot update.</div>;\n  }\n}\n```\n\nWithout React Proxy:\n\n```js\nconst rootEl = document.getElementById('root');\nReact.render(<ComponentVersion1 />, rootEl);\nReact.render(<ComponentVersion2 />, rootEl); // will reset state and kill DOM :-(\n```\n\nWith React Proxy:\n\n```js\nimport { createProxy, getForceUpdate } from 'react-proxy';\n\nconst proxy = createProxy(ComponentVersion1);\n\nconst Proxy = proxy.get();\nReact.render(<Proxy />, rootEl);\n\n// will update the mounted instances' prototypes:\n// both DOM and state are perserved.\nconst mountedInstances = proxy.update(ComponentVersion2);\n\n// works with React Native and non-Component descendants\nconst forceUpdate = getForceUpdate(React);\nmountedInstances.forEach(forceUpdate);\n```\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "react-proxy@0.6.5",
  "dist": {
    "shasum": "5e5b8b358f79d0d2b48289ab52fc021281ab0de5"
  },
  "_from": "react-proxy@^0.6.5",
  "_resolved": "https://registry.npmjs.org/react-proxy/-/react-proxy-0.6.5.tgz"
}
